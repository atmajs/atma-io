var Directory = IO.Directory,
	File = IO.File,
	glob = IO.glob
	;

UTest({
    
    'readFiles - directory': function(){
        var dir = new Directory('test/'),
            files = dir.readFiles('*.test').files
            ;
        
        assert(files.length > 1);
        eq(hasFile(files, 'dir.test'), true);
        eq(hasFile(files, 'file.test'), true);
        eq(hasFile(files, 'config.js'), false);
        
        
        var all = dir.readFiles('**.test').files;
        
        
        assert(all.length > files.length);
        eq(hasFile(all, 'json.test'), true);
    },
    
    'readFiles - glob': function(){
        var files = glob.readFiles('test/*.test');
        assert(files.length > 1);
        eq(hasFile(files, 'dir.test'), true);
        eq(hasFile(files, 'file.test'), true);
    },
    
    'ensure+remove': function(){
        var DIR = 'test/bin/dir/sub/',
            FILENAME = 'test.txt';
            
        Directory.ensure(DIR);
        eq_(Directory.exists(DIR), true);
        
        File.write(DIR + FILENAME, 'FOO');
		
        eq_(File.read(DIR + FILENAME), 'FOO');
        
        Directory.remove(DIR);
        eq_(File.exists(DIR + FILENAME), false);
        eq_(Directory.exists(DIR), false);
    }
    
});

function hasFile(files, filename) {
    
    return files.some(function(file){
        return file.uri.file === filename;
    });
}
